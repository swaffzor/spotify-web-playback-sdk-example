{"version":3,"sources":["WebPlayback.jsx","Login.js","App.js","index.js"],"names":["initialTrack","name","album","images","url","artists","WebPlayback","_ref","_currentTrack$album$i","token","playlistId","setPlaylistId","isPaused","setPaused","useState","isActive","setActive","player","setPlayer","undefined","currentTrack","setCurrentTrack","playlistMetaData","setPlaylistMetaData","owner","playlistTracks","setPlaylistTracks","deviceID","setDeviceID","customPlaylist","setCustomPlaylist","useEffect","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","now","Date","Spotify","Player","getHours","getMinutes","getSeconds","getOAuthToken","cb","volume","addListener","_ref2","device_id","console","log","_ref3","state","track_window","current_track","paused","getCurrentState","then","connect","response","fetch","headers","Authorization","status","error","location","href","data","json","tracks","items","display_name","fetchPlaylistTracks","_jsxs","children","className","_jsx","style","_Fragment","alt","onClick","previousTrack","togglePlay","nextTrack","marginTop","color","backgroundColor","padding","position","top","width","type","placeholder","onChange","e","target","value","URL","pathname","split","pop","map","trackItem","index","_trackItem$track$albu","method","JSON","stringify","context_uri","offset","playTrack","track","Login","App","setToken","playlistID","setPlaylistID","access_token","getToken","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97f546d4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst initialTrack = {\n  name: \"\",\n  album: {\n    images: [{ url: \"\" }],\n  },\n  artists: [{ name: \"\" }],\n};\n\nfunction WebPlayback({ token, playlistId, setPlaylistId }) {\n  const [isPaused, setPaused] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [player, setPlayer] = useState(undefined);\n  const [currentTrack, setCurrentTrack] = useState(initialTrack);\n  const [playlistMetaData, setPlaylistMetaData] = useState({\n    name: \"\",\n    owner: \"\",\n  });\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [deviceID, setDeviceID] = useState(\"\");\n  const [customPlaylist, setCustomPlaylist] = useState(\"\");\n\n  useEffect(() => {\n    // Load Spotify SDK\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const now = new Date();\n      const player = new window.Spotify.Player({\n        name: `Composer POC ${now.getHours()}:${now.getMinutes()} ${now.getSeconds()}`,\n        getOAuthToken: (cb) => {\n          cb(token);\n        },\n        volume: 0.5,\n      });\n\n      setPlayer(player);\n\n      player.addListener(\"ready\", ({ device_id }) => {\n        console.log(\"Ready with Device ID\", device_id);\n        setDeviceID(device_id);\n      });\n\n      player.addListener(\"not_ready\", ({ device_id }) => {\n        console.log(\"Device ID has gone offline\", device_id);\n      });\n\n      player.addListener(\"player_state_changed\", (state) => {\n        if (!state) return;\n        setCurrentTrack(state.track_window.current_track);\n        setPaused(state.paused);\n\n        player.getCurrentState().then((state) => {\n          setActive(!!state);\n        });\n      });\n\n      player.connect();\n    };\n  }, [token]);\n\n  // Fetch playlist\n  useEffect(() => {\n    if (!playlistId) return;\n\n    const fetchPlaylistTracks = async () => {\n      const response = await fetch(\n        `https://api.spotify.com/v1/playlists/${playlistId}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (response.status === 401) {\n        console.error(\"Token expired, redirecting to login\");\n        window.location.href = \"/auth/login\";\n      }\n\n      const data = await response.json();\n      setPlaylistTracks(data.tracks.items);\n      setPlaylistMetaData({ name: data.name, owner: data.owner.display_name });\n    };\n\n    fetchPlaylistTracks();\n  }, [playlistId, token]);\n\n  // Function to play selected track\n  const playTrack = async (offset) => {\n    if (!player) return;\n\n    const response = await fetch(\n      `https://api.spotify.com/v1/me/player/play?device_id=${deviceID}`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          context_uri: `spotify:playlist:${playlistId}`,\n          offset: { position: offset },\n        }),\n      }\n    );\n\n    if (response.status === 401) {\n      console.error(\"Token expired. redirecting to login\");\n      window.location.href = \"/auth/login\";\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing sticky\" style={{}}>\n          {isActive ? (\n            <>\n              <img\n                src={currentTrack.album.images[0]?.url}\n                className=\"now-playing__cover\"\n                alt=\"\"\n              />\n              <div className=\"now-playing__side\">\n                <div className=\"now-playing__name\">{currentTrack.name}</div>\n                <div className=\"now-playing__artist\">\n                  {currentTrack.artists[0].name}\n                </div>\n\n                <button onClick={() => player.previousTrack()}>&lt;&lt;</button>\n                <button onClick={() => player.togglePlay()}>\n                  {isPaused ? \"PLAY\" : \"PAUSE\"}\n                </button>\n                <button onClick={() => player.nextTrack()}>&gt;&gt;</button>\n              </div>\n            </>\n          ) : (\n            <div style={{ marginTop: 100 }}>\n              <h1 style={{ color: \"white\" }}>Composer POC</h1>\n              <h2 style={{ color: \"white\" }}>\n                Tap on any track to start playback.\n              </h2>\n            </div>\n          )}\n        </div>\n\n        <div\n          style={{\n            backgroundColor: \"#333\",\n            padding: \"8px 0 8px 16px\",\n            position: \"fixed\",\n            top: 300,\n            width: \"100%\",\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"paste a Spotify playlist URL here\"\n            style={{ width: \"500px\" }}\n            onChange={(e) => {\n              setCustomPlaylist(e.target.value);\n              // Extract playlist ID from URL\n              const url = new URL(e.target.value);\n              setPlaylistId(url.pathname.split(\"/\").pop());\n            }}\n            value={customPlaylist}\n          />\n          <h3 style={{ color: \"#44c767\" }}>\n            Playlist: {playlistMetaData.name} by {playlistMetaData.owner}\n          </h3>\n        </div>\n      </div>\n\n      <div className=\"playlist\">\n        {playlistTracks.map((trackItem, index) => (\n          <div\n            key={index}\n            className=\"playlist-track\"\n            onClick={() => playTrack(index)}\n          >\n            <img\n              src={trackItem.track.album.images[0]?.url}\n              className=\"album-cover\"\n              alt=\"album cover\"\n            />\n            <div className=\"track-info\">\n              <div className=\"track-name\">{trackItem.track.name}</div>\n              <div className=\"track-artist\">\n                {trackItem.track.artists[0].name}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default WebPlayback;\n","import React from 'react';\n\nfunction Login() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <button onClick={() => window.location.href = \"/auth/login\"}>\n                    Login with Spotify\n                </button>\n                {/* <a className=\"btn-spotify\" href=\"/auth/login\" >\n                </a> */}\n            </header>\n        </div>\n    );\n}\n\nexport default Login;\n\n","import React, { useState, useEffect } from 'react';\nimport WebPlayback from './WebPlayback'\nimport Login from './Login'\nimport './App.css';\n\nfunction App() {\n\n  const [token, setToken] = useState('');\n  const [playlistID, setPlaylistID] = useState('1fMkI1ZT6gBkVgW3T3s3YM')\n\n  useEffect(() => {\n\n    async function getToken() {\n      const response = await fetch('/auth/token');\n      const json = await response.json();\n      setToken(json.access_token);\n    }\n\n    getToken();\n\n  }, []);\n\n  return (\n    <>\n      {(token === '') ? <Login /> : <WebPlayback token={token} playlistId={playlistID} setPlaylistId={setPlaylistID} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}